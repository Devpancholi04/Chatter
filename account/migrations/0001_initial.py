# Generated by Django 5.1.3 on 2025-02-24 16:08

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('user_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('username', models.CharField(editable=False, max_length=100, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('mobile_number', models.CharField(max_length=15)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'M'), ('F', 'F'), ('T', 'T'), ('NOT PREFER TO SAY', 'Not Prefer to Say')], max_length=50, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('profile_photos', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('pin_code', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], default='INACTIVE', help_text='This indicated the user is verified', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='This indicated the user is Active')),
                ('is_two_step_verification', models.BooleanField(default=False)),
                ('is_anonymous_chat_enabled', models.BooleanField(default=False)),
                ('roles', models.CharField(choices=[('ADMIN', 'Admin'), ('EMPLOYEE', 'Employee'), ('USER', 'User')], default='USER', max_length=20)),
                ('is_employee', models.BooleanField(default=False, help_text='This indicated the user is employee and has only employee rights')),
                ('employee_verification', models.CharField(choices=[('PENDING', 'Pending'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('is_staff', models.BooleanField(default=False, help_text='This indicated the user is employee and Admin')),
                ('is_superuser', models.BooleanField(default=False, help_text='This indicated the user is Admin')),
                ('email_token', models.CharField(blank=True, max_length=100, null=True)),
                ('forget_token', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
